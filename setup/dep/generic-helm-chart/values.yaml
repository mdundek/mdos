enabled: true
developement: false # if true, services will be exposed as NodePorts
registry: registry.mdundek.private:30979 # The registry host to get the images from
isMdosApp: true
mdosAcbmAppUUID:
mdosBundleName:
appName: app1

global:
  imagePullPolicy: Always
  config: [] # Env vars to set globally on all app components
  # config:
      #   - type: file
      #     key: test.secret
      #     value: "Content of test.secret file"
      #     mountPath: "/etc/myApp/config/"
      #     #NEW  ##
      #     appComp: # list of AppComponents to mount the config to, with or without a specific mountPath
      #       - name:
      #         mountPath:
      #     #OLD
      #     appCompNames:
      #       - okube-api  ##
      #   - type: env
      #     key: SECRET_ENV
      #     value: "Value of ENV variable SECRET_ENV"
  secrets: [] # Secret vars to set globally on all app components
  # secrets:
      #   - type: file # will be mounted as a file inside the pod
      #     key: test.config
      #     value: "Content of test.config file"
      #     mountPath: "/etc/myApp/config/"
      #   - type: env # will be mounted as an ENV var inside the pod
      #     key: TEST_ENV
      #     value: "Value of ENV variable TEST_ENV"
      #     #NEW  ##
      #     appComp: # list of AppComponents to mount the config to, with or without a specific mountPath
      #       - name:
      #         mountPath:
      #     #OLD
      #     appCompNames:
      #       - okube-api ##

serviceLinks: {}
# serviceLinks:
#   - appUUID: KIKT754-HGDEH-TRGJK
#     appName: pacman
#     appDomain: mdos # the namespace of the service link app
#     port: 80

initContainer:
  image: mdos/mdos-ldl-data-sync
  imageTag: 0.2.2

# appComponents: {}
appComponents:
  - name: myAppComponent1
    mdosAcbmAppCompUUID: # renamed from mdosAcbmAppUUID, to be kept on kubernetes objects
    replicaCount: 1
    
    # networkIsolation: "open" --> all apps from the same namespace (bundle) can access current appComponent
    # networkIsolation: "limited" --> only AppComponents which ID are set in $allowedAppComponents can access current appComponent
    networkIsolation: "private" # fully isolated, only ODM and kubernetes system components can access
    allowedAppComponents: []
    # allowedAppComponents: # NEW : allows a list of AppComponent IDs
    #   - mdosAcbmAppCompUUID: "$AppComponentUUID" # --> pods with $AppComponentUUID can access current appComponent
    #     mdosAcbmAppCompName: "$appName"
    #     mdosAcbmAppUUID: "$mdosAcbmAppUUID"

    # Use the skipNetworkIsolation param if you want to manage network isolations manually
    # skipNetworkIsolation: true

    image:
      repository: sqlite
      # Overrides the image tag whose default is the chart appVersion.
      tag: "9.87.2-devtest"

    imagePullSecrets: []

    # Specify extra pod labels that you want to apply to the app Component pods
    # podLabels: {}

    # allows the deployment to be a daemonset
    isDaemonSet: false

    # allows to overwrite the default docker command to use
    overwriteCommand: false
    command: []
    commandArgs: []

    # allows to set the working directory of the container
    workingDir: 

    serviceAccount:
      # Specifies whether a service account should be created
      create: false
      # Annotations to add to the service account
      annotations: {}
      # The name of the service account to use.
      # If not set and create is true, a name is generated using the fullname template
      # name: "default"

    podAnnotations: {}

    podSecurityContext: {}
      # fsGroup: 2000

    securityContext: {}
      # capabilities:
      #   drop:
      #   - ALL
      # readOnlyRootFilesystem: true
      # runAsNonRoot: true
      # runAsUser: 1000

    service:
      create: false
      type: ClusterIP
      portMappings:
        - port: 80
          containerPort: 80
          devNodePort: 30999
      # OLD PROBE
      # livenessProbePath: /
      # readinessProbePath: /
      ## NEW PROBE
      livenessProbe:
        enabled: false
        type: tcp
        port: 8080
        path: /health # only for http probe
        initialDelay: 30 # seconds
      readinessProbe:
        enabled: false
        type: tcp
        port: 8080
        path: /health # only for http probe
        initialDelaySeconds: 30
        periodSeconds: 5
        timeoutSeconds: 2
        successThreshold: 1
        failureThreshold: 3

    # nodePortService:
    #   portMappings:
    #     - port: 9999
    #       containerPort: 9999
    #       nodePort: 30915

    ## OLD VS
    # virtualService:
    #   enabled: false
    #   svcPort: 80
    #   matchPrefix:
    #   hosts:
    #     - chart-example.com
    #   tls: []
    ## NEW VS
    virtualService:
      - gateway: http-gateway
        hosts:
          - chart-example.com
        protocol: https # http / https / tls / tcp
        tlsMatchHosts: # only for tls/https route
          - host: chart-example.com
            port: 443
            svcPort: 8443
        httpMatch: # only for http route
          prefix: /
          port: 80
        tcpMatchPorts: # only for tcp
          - 27017
        svcPort: 80
        tls: []

    config:
      enabled: false
      data: {}
      # data:
      #   - type: file # will be mounted as a file inside the pod
      #     key: test.config
      #     value: "Content of test.config file"
      #     mountPath: "/etc/myApp/config/"
      #   - type: env # will be mounted as an ENV var inside the pod
      #     key: TEST_ENV
      #     value: "Value of ENV variable TEST_ENV"

    secrets:
      enabled: false
      data: {}
      # data:
      #   - type: file
      #     key: test.secret
      #     value: "Content of test.secret file"
      #     mountPath: "/etc/myApp/config/"
      #   - type: env
      #     key: SECRET_ENV
      #     value: "Value of ENV variable SECRET_ENV"

    ## Persist data to a persistent volume
    ### WARNING : To use ldlSync=true, initContainer bloc must be specified
    persistence:
      enabled: false
      volumes:
        - name: data-volume
          size: 1Gi
          mountPath: /tmp
          ldlSync: false
          sourcePath: /mdos/content-volumes/app1 # path from where data should be collected (ONLY used with ldlSync=true)
          type: full # full / partial depending on the type of file copy (ONLY used with ldlSync=true)
      # Used for MDOS only and dev center dev purposes
      hostpathVolumes: 
          - name: host-data-volume
            mountPath: /tmp
            hostPath: /mdos/content-volumes/app1
            type: Directory
    
    waitForComponents:
    #  - {mdosAcbmAppCompUUID}||{mdosAcbmAppCompName}||{mdosAcbmAppUUID}
    #  - {mdosAcbmAppCompUUID}||{mdosAcbmAppCompName}||{mdosAcbmAppUUID}

    ## Persist logs to a persistent volume
    logs:
      enabled: false
      existingClaim:
      size: 1Gi

    resources: {}
      # We usually recommend not to specify default resources and to leave this as a conscious
      # choice for the user. This also increases chances charts run on environments with little
      # resources, such as Minikube. If you do want to specify resources, uncomment the following
      # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
      # limits:
      #   cpu: 100m
      #   memory: 128Mi
      # requests:
      #   cpu: 100m
      #   memory: 128Mi

    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      # targetMemoryUtilizationPercentage: 80


nodeSelector: {}

tolerations: []

affinity: {}
