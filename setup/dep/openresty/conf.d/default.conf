resolver 8.8.8.8;

lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;
lua_ssl_verify_depth 5;

lua_shared_dict discovery 1m;
lua_shared_dict jwks 1m;

init_by_lua_block {
  oidcenabled = false;
}

upstream k3s_istio_80 {
    server istio-ingressgateway.istio-system:80;
}

server {
    listen 443 ssl;
    server_name _NO_AUTH_DOMAINS_;

    ssl_certificate /etc/letsencrypt/live/_DOMAIN_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_DOMAIN_/privkey.pem;

    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    location / {
        proxy_pass http://k3s_istio_80;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_set_header Host $host;
        proxy_set_header Accept-Encoding gzip;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30;
        proxy_send_timeout 30;
    }
}

server {
    listen 443 ssl http2;
    server_name *._DOMAIN_;

    ssl_certificate /etc/letsencrypt/live/_DOMAIN_/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/_DOMAIN_/privkey.pem;

    ssl_session_cache builtin:1000 shared:SSL:10m;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
    ssl_prefer_server_ciphers on;

    location / {
        access_by_lua_block {
            if oidcenabled then
                local opts = {
                    redirect_uri = "https://" .. ngx.var.host .. "/redirect_uri",
                    discovery = "https://keycloak._DOMAIN_/realms/mdos/.well-known/openid-configuration",
                    client_id = "__KC_CLIENT_ID__",
                    client_secret = "__KC_CLIENT_SECRET__",
                    scope = "openid",
                    use_nonce = true
                }
                local res, err = require("resty.openidc").authenticate(opts)

                if err then
                    ngx.status = 500
                    ngx.say(err)
                    ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
                end

                ngx.req.set_header("X-USER", res.id_token.sub)
            end
        }

        proxy_pass http://k3s_istio_80;
        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection upgrade;
        proxy_set_header Host $host;
        proxy_set_header Accept-Encoding gzip;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 30;
        proxy_send_timeout 30;
    }
}